import "sys.base";
import "sys.list";
import "sys.proc";
import "sys.task";
import "sys.string";

call g_set_process_desc("time routinue");
var pid = call g_get_pid();
var share = call g_wait_share("PID#" + pid);
call g_stop_share("PID#" + pid);
var args = call g_map_get(share, "args");

var in = call g_create_pipe("PIPEIN#" + pid);
var out = call g_create_pipe("PIPEOUT#" + pid);

var signal = "PIDSIG#" + pid;
call g_start_share(signal, true);

var get_time = func ~() -> call g_task_get_fast("system", "now");
for (; call g_query_share(signal);) {
    call g_write_pipe(out, "" + call get_time() + "\r");
    call g_task_sleep(1);
}
call g_write_pipe(out, "\n");

call g_stop_share(signal);

call g_destroy_pipe(out);
call g_destroy_pipe(in);